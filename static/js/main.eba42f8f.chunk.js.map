{"version":3,"sources":["tab/Home.js","tab/Tab.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","React","Component","Information","class","target","href","Skills","Projects","name","languages","description","code","visit","Links","this","props","Project","langs","map","lang","Tab","changeTabToHome","bind","state","tab","setState","onBtnPress","Button","handleClick","e","value","onClick","Body","title","content","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eba42f8f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Home.scss\";\r\n\r\nexport default class Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <Information></Information>\r\n        <Skills></Skills>\r\n        <Projects></Projects>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Information extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Information\">\r\n        <div class=\"Me\">\r\n          <h1 className=\"Name\">Ivailo Hristov</h1>\r\n          <h2 className=\"Title\">Full-Stack Web Developer</h2>\r\n        </div>\r\n        <div className=\"Contacts\">\r\n          <p>\r\n            <span>Phone:</span>\r\n            +359 877 676 887\r\n          </p>\r\n          <p>\r\n            <span>Mail:</span>\r\n            ivailohristov1990@gmail.com\r\n          </p>\r\n          <a target=\"_blank\" href=\"https://github.com/HristovCodes\">\r\n            <span>Github:</span>\r\n            github.com/HristovCodes/\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Skills extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Skills\">\r\n        <ul className=\"Category\">\r\n          <li className=\"Header\">Languages</li>\r\n          <li>C#</li>\r\n          <li>SQL</li>\r\n          <li>HTML5</li>\r\n          <li>CSS3</li>\r\n          <li>ES6</li>\r\n          <li>SCSS/SASS</li>\r\n        </ul>\r\n        <ul className=\"Category\">\r\n          <li className=\"Header\">Frameworks</li>\r\n          <li>Asp.Net</li>\r\n          <li>Entity Framework</li>\r\n          <li>React</li>\r\n          <li>Tailwind</li>\r\n        </ul>\r\n        <ul className=\"Category\">\r\n          <li className=\"Header\">Other</li>\r\n          <li>Git</li>\r\n          <li>WebPack</li>\r\n          <li>Figma</li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Projects extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Projects\">\r\n        <div className=\"Container\">\r\n          <Project\r\n            name=\"Pellio\"\r\n            languages={[\"C#\", \"EF\", \"HTML\", \"CSS\", \"ES6\"]}\r\n            description=\"Asp.Net Core e-commerce web app develepod using Asp.Net Core, EF Core and MSSQLServer for the database.\"\r\n          ></Project>\r\n          <Links\r\n            code=\"https://github.com/HristovCodes/Pellio-Project\"\r\n            visit=\"\"\r\n          ></Links>\r\n        </div>\r\n        <div className=\"Container\">\r\n          <Project\r\n            name=\"Personal Library\"\r\n            languages={[\"HTML\", \"CSS\", \"ES6\"]}\r\n            description=\"Web application that allows you to keep track of books that you have read and ones that you are reading.\"\r\n          ></Project>\r\n          <Links\r\n            code=\"https://github.com/HristovCodes/Personal-Library\"\r\n            visit=\"https://hristovcodes.github.io/Personal-Library/\"\r\n          ></Links>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Links extends React.Component {\r\n  render() {\r\n    if (this.props.visit === \"\") {\r\n      return (\r\n        <div className=\"Links\">\r\n          <a target=\"_blank\" href={this.props.code} className=\"Btn\">\r\n            Code\r\n          </a>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"Links\">\r\n          <a target=\"_blank\" href={this.props.code} className=\"Btn\">\r\n            Code\r\n          </a>\r\n          <a target=\"_blank\" href={this.props.visit} className=\"Btn\">\r\n            Visit\r\n          </a>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nclass Project extends React.Component {\r\n  render() {\r\n    let langs = (\r\n      <div className=\"Languages\">\r\n        {this.props.languages.map((lang) => (\r\n          <p className=\"Lang\">{lang}</p>\r\n        ))}\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"Project\">\r\n        <p className=\"PrjName\">{this.props.name}</p>\r\n        <p className=\"Description\">{this.props.description}</p>\r\n        {langs}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Home from \"./Home.js\";\r\n\r\nclass Tab extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.changeTabToHome = this.changeTabToHome.bind(this);\r\n    this.state = {\r\n      tab: Home,\r\n    };\r\n  }\r\n\r\n  changeTabToHome() {\r\n    this.setState({ tab: Home });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Tab\">\r\n        <div className=\"Nav\">\r\n          <Button onBtnPress={this.changeTabToHome} name=\"Home\"></Button>\r\n        </div>\r\n        <Body tab={this.state.tab}></Body>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Button extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(e) {\r\n    this.props.onBtnPress(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    return <button onClick={this.handleClick}>{this.props.name}</button>;\r\n  }\r\n}\r\n\r\nclass Body extends React.Component {\r\n  render() {\r\n    return (\r\n      <this.props.tab\r\n        title={this.props.title}\r\n        content={this.props.content}\r\n      ></this.props.tab>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tab;\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport \"./reset.css\";\nimport Tab from \"./tab/Tab.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Tab></Tab>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}